<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Food Order System</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
      crossorigin="anonymous"
    />
    <link rel="stylesheet" href="/css/style.css" />
  </head>
  <body>
    <%- include('_layout/navbar.ejs') %>
    <main class="container mt-5">
      <button
        class="btn btn-primary mb-3 additem"
        data-bs-toggle="modal"
        data-bs-target="#addModal"
      >
        Add New Item
      </button>

      <table class="table table-bordered">
        <thead>
          <tr>
            <th>Restaurant</th>
            <th>Category</th>
            <th>Name</th>
            <th>Price</th>
            <th>Action</th>
          </tr>
        </thead>
        <tbody id="table-body"></tbody>
      </table>
    </main>

    <!-- Add Modal -->
    <div
      class="modal fade"
      id="addModal"
      tabindex="-1"
      aria-labelledby="addModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="text-center fw-bold" id="addModalLabel">
              Add New Food Item
            </h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <div class="modal-body">
            <form id="addForm">
              <div class="row mb-3">
                <!-- Restaurant Field -->
                <div class="col">
                  <label for="restaurant" class="form-label">Restaurant</label>
                  <select class="form-select selectrestaurant" id="restaurant">
                    <option value="" selected disabled>
                      Choose a restaurant...
                    </option>
                  </select>
                </div>

                <!-- Category Field -->
                <div class="col">
                  <label for="category" class="form-label">Category</label>
                  <select
                    class="form-select selectcategory"
                    id="category"
                    disabled
                  >
                    <option value="" selected disabled>
                      Choose a category...
                    </option>
                  </select>
                </div>
              </div>
              <div class="mb-3">
                <label for="name" class="form-label">Food Name</label>
                <input type="text" class="form-control" id="name" />
              </div>
              <div class="mb-3">
                <label for="price" class="form-label">Price</label>
                <input type="number" class="form-control" id="price" />
              </div>
            </form>
          </div>
          <div class="modal-footer">
            <button
              type="button"
              class="btn btn-secondary"
              data-bs-dismiss="modal"
            >
              Close
            </button>
            <button type="submit" form="addForm" class="btn btn-primary">
              Add Item
            </button>
          </div>
        </div>
      </div>
    </div>

    <!-- Update Modal -->
    <div
      class="modal fade"
      id="updateModal"
      tabindex="-1"
      aria-labelledby="updateModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="updateModalLabel">Update Food Item</h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <div class="modal-body">
            <form id="updateForm" data-id=""">
              <input type="hidden" id="updateId" />
              <div class="row mb-3">
                <!-- Restaurant Field -->
                <div class="col">
                  <label for="restaurant" class="form-label">Restaurant</label>
                  <select
                    class="form-select selectrestaurantupdate"
                    id="updaterestaurant"
                    required
                  >
                    <option value="" selected disabled>
                      Choose a restaurant...
                    </option>
                  </select>
                </div>

                <!-- Category Field -->
                <div class="col">
                  <label for="category" class="form-label">Category</label>
                  <select
                    class="form-select selectcategoryupdate"
                    id="updatecategory"
                    required
                  >
                    <option value="" selected disabled>
                      Choose a category...
                    </option>
                  </select>
                </div>
              </div>
              <div class="mb-3">
                <label for="updatename" class="form-label">Food Name</label>
                <input
                  type="text"
                  class="form-control"
                  id="updatename"
                  required
                />
              </div>
              <div class="mb-3">
                <label for="updateprice" class="form-label">Price</label>
                <input
                  type="number"
                  class="form-control"
                  id="updateprice"
                  required
                />
              </div>
            </form>
          </div>
          <div class="modal-footer">
            <button
              type="button"
              class="btn btn-secondary"
              data-bs-dismiss="modal"
            >
              Close
            </button>
            <button type="submit" form="updateForm" class="btn btn-primary">
              Update
            </button>
          </div>
        </div>
      </div>
    </div>
    <!-- Delete Modal -->
    <div
      class="modal fade"
      id="deleteModal"
      tabindex="-1"
      aria-labelledby="deleteModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <div class="modal-body">
            <p>Are you sure you want to delete this food item?</p>
          </div>
          <div class="modal-footer">
            <button
              type="button"
              class="btn btn-secondary"
              data-bs-dismiss="modal"
            >
              Cancel
            </button>
            <button type="button" id="deleteFoodButton" class="btn btn-danger">
              Delete
            </button>
          </div>
        </div>
      </div>
    </div>

    <%- include('_layout/footer.ejs') %>
    <script>
      const data = <%- JSON.stringify(result) %>;

      const tableBody = document.getElementById("table-body");
      tableBody.innerHTML = data
      .map(
        (item) => `
          <tr>
            <td>${item.rname}</td>
            <td>${item.cname}</td>
            <td>${item.name}</td>
            <td>${item.price.toLocaleString("vi-VN", { style: "currency", currency: "VND" })}</td>
            <td>
              <button class="btn btn-warning btn-sm update-btn"
                data-bs-toggle="modal"
                data-bs-target="#updateModal"
                data-id="${item.ID}"
                data-restaurant="${item.rname}"
                data-category="${item.cname}"
                data-name="${item.name}"
                data-price="${item.price}"
              >
                <i class="bi bi-pencil-fill"></i> Update
              </button>
              <button class="btn btn-danger btn-sm delete-btn" data-id="${item.ID}">
                <i class="bi bi-trash-fill"></i> Delete
              </button>
            </td>
          </tr>
        `
      )
      .join("");
      document.querySelector('.additem').addEventListener('click',()=>{
        document.getElementById("restaurant").value="";
        document.getElementById("category").value="";
        document.getElementById('price').value="";
        document.getElementById('name').value="";
        document.getElementById('category').innerHTML='<option value="" selected disabled> Choose a category...</option>';
        document.getElementById(`category`).disabled=true;
      })
      async function getCategory(operation) {
        try {
          const response = await fetch('http://localhost:3000/fooditem/res-category', {
              method: 'GET',
              headers: {
                  'Content-Type': 'application/json'
              }
          });

          if (!response.ok) {
              throw new Error(`HTTP error! Status: ${response.status}`);
          }

          const res_data = await response.json();
          const res_category = res_data.res_table;
          console.log(res_category);
          const restaurantSelect = document.getElementById(`${operation}restaurant`);
          const categorySelect = document.getElementById(`${operation}category`);
          document.querySelector(`.selectrestaurant${operation}`).innerHTML += Object.keys(res_category).map((key) =>
              `<option value="${key}">${key}</option>`
          ).join('');


          restaurantSelect.addEventListener("change", () => {
          categorySelect.disabled = false;

          const selectedRestaurant = restaurantSelect.value;
          document.querySelector(`.selectcategory${operation}`).innerHTML = '<option value="" selected disabled> Choose a category...</option>'+
          res_category[selectedRestaurant].map((item) =>
              `<option value="${item}">${item}</option>`
          ).join('');
        });
        } catch (err) {
          alert(err.message);
        }
      }

      getCategory("");

      document.getElementById('addForm').addEventListener("submit",async (e)=> {
        e.preventDefault();
        const fields = [
        {name:"restaurant",display:"Restaurant"},
        {name:"category",display:"Category"},
        {name:"name",display:"Name"},
        {name:"price",display:"Price"}];

        const restaurant = document.getElementById("restaurant").value;
        const category = document.getElementById("category").value;
        const price = document.getElementById('price').value;
        const name = document.getElementById('name').value;

        const missingfields = fields.filter((field)=>!document.getElementById(field.name).value).map((item)=>item.display);
        if (!restaurant || !category || !price || !name) {
        alert(`Bạn chưa điền các thông tin ${missingfields.join(",")}`);
        return;
        }
        try{
          const response = await fetch('http://localhost:3000/fooditem/addone',{
          method: 'POST',
          headers: {
                  'Content-Type': 'application/json'
          },
          body: JSON.stringify({
                restaurant,
                category,
                price,
                name
          })
          });
          const res_data = await response.json();
          if (res_data.status==="success") {
              location.reload();
          } else {
              alert(res_data.message, res_data);
          }
        } catch (err) {
          alert(err.message);
        }
      });

      document.querySelectorAll('.delete-btn').forEach(button => {
        button.addEventListener('click', (e) => {
        e.preventDefault();
        const foodItemId = e.target.getAttribute('data-id');
        new bootstrap.Modal(document.getElementById('deleteModal')).show();
        document.getElementById('deleteFoodButton').addEventListener('click',async ()=>{
          try {
            const response = await fetch(`http://localhost:3000/fooditem/deleteone/${foodItemId}`,{
            method: 'DELETE',
            headers: {
                  'Content-Type': 'application/json'
            },
          });
          const res_data = await response.json();
          if (res_data.status==="success") {
              location.reload();
          } else {
              alert(res_data.message);
          }
          } catch(err) {
            console.log(err);
            alert(err.message);
          }
        });
        });
      });
      document.getElementById('updateForm').addEventListener('submit',async (e)=>{
            e.preventDefault();
            const restaurant = document.getElementById("updaterestaurant").value;
            const category = document.getElementById("updatecategory").value;
            const price = document.getElementById('updateprice').value;
            const name = document.getElementById('updatename').value;
            const foodItemId = e.target.getAttribute('data-id');
            if (!restaurant || !category || !price || !name) {
              alert("Vui lòng điền đầy đủ thông tin!");
              return;
            }

            try {
              const response = await fetch(`http://localhost:3000/fooditem/updateone/${foodItemId}`,{
              method: 'PUT',
              headers: {
                  'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                restaurant,
                category,
                price,
                name
              }
              )
            });

            const res_data = await response.json();
            if (res_data.status==="success") {
                location.reload();
            } else {
                alert(res_data.message);
            }
            } catch(err) {
              console.log(err);
              alert(err.message);
            }
          });
      document.querySelectorAll('.update-btn').forEach((button) => {
        button.addEventListener('click', async (e) => {
        e.preventDefault();
        const response = await fetch('http://localhost:3000/fooditem/res-category', {
              method: 'GET',
              headers: {
                  'Content-Type': 'application/json'
              }
          });
          if (!response.ok) {
              throw new Error(`HTTP error! Status: ${response.status}`);
          }
          const res_data = await response.json();
          const res_category = res_data.res_table;
          document.getElementById('updateForm').setAttribute('data-id', e.target.getAttribute('data-id'));
          document.querySelector(`.selectrestaurantupdate`).innerHTML = Object.keys(res_category).map((key) =>
              `<option value="${key}">${key}</option>`
          ).join('');



          document.querySelector(`.selectcategoryupdate`).innerHTML =
          res_category[document.querySelector('.selectrestaurantupdate').value].map((item) =>
              `<option value="${item}">${item}</option>`
          ).join('');

          const fields = ["restaurant","category", "price", "name"];
          fields.forEach(field=>{
            document.getElementById(`update${field}`).value=e.target.getAttribute(`data-${field}`);
          })

      });

      });
      getCategory("update");
    </script>
    <!-- Include Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  </body>
</html>